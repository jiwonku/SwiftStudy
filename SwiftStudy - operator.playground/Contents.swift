import UIKit

/*
 산술 연산자 : 사칙 연산에 대한 연산자들
 */

-1 // 값의 부호를 변경
3+1 // 두 값을 더함
3-1 // 연산자 앞의 값에서 뒤의 값을 뺌
3*1 // 두 개의 값을 곱함
3/1 // 연산자 앞의 값을 뒤의 값으로 나눔
3%1 // 연산자 앞의 값을 뒤의 값으로 나눈 나머지

/*
 이항 연산자를 사용할 때 연산자 앞뒤의 공백이 동일해야 함
 */



/*
 비교 연산자 : 결과가 항상 bool 타입의 값으로 표시됨.
 */

1 < 3
1 > 3
1 <= 3
1 >= 3
1 == 3
1 != 3


/*
 논리 연산자 : 연산 대상인 피연산자들은 모두 true or false 값을 가지는 bool 타입이어야 함.
 */

let a = 10
let b = 5
let c = 2

a > b && b > c
a == b && a > b
a == b || a > b

a - b > b - c && b == 0
a + b > c || c > 0



/*
 범위 연산자
 => 스위프트에서 제공하는 독특한 연산자
 => 주어진 값 사이의 범위를 일정한 정수 간격으로 표현하는 연산자
 => 닫힌 범위 연산자와 반 닫힌 범위 연산자 두 가지가 있음.
 */


// 닫힌 범위 연산자 : 주어진 피연산자 a,b를 포함하는 범위를 나타내는 연산자.

1 ... 5 // 1,2,3,4,5 를 나타냄. / 왼쪽에 작은 숫자를, 오른쪽에 큰 숫자를 배치해야 함.

// 점 세개로 표현되는 범위 연산자는 양쪽 피연산자를 모두 포함한 범위 안에 있는 모든 정수값을 순서대로 표현함.



// 반 닫힌 범위 연산자 : 절반만 닫힌 연산자 / 연산자의 양쪽 경계 중에서 왼쪽 경계는 포함하되 오른쪽 경계는 포함하지 않는 연산자.

1 ..< 5 // 1,2,3,4를 나타냄. / 5까지 나타내려면 오른쪽 피연산자를 6으로 설정해야 함.

// 포함하지 않는 방향은 항상 오른쪽이어야 함 / 왼쪽 범위의 반 닫힌 범위 연산자 형식이 스위프트에 정의되어 있지 않음.


let d = 1
let e = 5

for row in d ... e {
    row
}

for row in d ..< e {
    row
}


/*
 대입 연산자 : 값을 변수에 대입하고자 할 때 사용
 */
